apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'io.fabric'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("petuniaCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("petuniaBuildToolsVersion")

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {

        applicationId globalConfiguration.getAt("petuniaApplicationId")

        minSdkVersion globalConfiguration.getAt("petuniaMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("petuniaTargetSdkVersion")

        versionCode globalConfiguration.getAt("petuniaVersionCode")
        versionName globalConfiguration.getAt("petuniaVersionName")

        testApplicationId globalConfiguration.getAt("petuniaTestApplicationId")

        buildConfigField "boolean", "USE_CRASHLYTICS", "false"
    }

    signingConfigs {

        release {
            keyAlias project.keyAlias
            keyPassword project.keyPassword
            storeFile file(project.storeFile)
            storePassword project.storePassword
        }
    }

    buildTypes {

        debug {
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
        }

        release {
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            ext.enableCrashlytics = true

            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        fake {
            applicationId 'com.imgtec.creator.project4.fake'
        }

        real {
            applicationId 'com.imgtec.creator.project4'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
        }
    }
}

dependencies {

    compile fileTree(include: ['*.jar'], dir: 'libs')

    def petuniaDependencies = rootProject.ext.petuniaDependencies

    compile petuniaDependencies.appCompat
    compile petuniaDependencies.appDesign

    compile petuniaDependencies.recyclerView
    compile petuniaDependencies.cardView
    compile petuniaDependencies.mpAndroidCharts

    compile petuniaDependencies.butterKnife
    apt petuniaDependencies.butterKnifeCompiler

    compile petuniaDependencies.slf4j
    compile petuniaDependencies.logback

    compile petuniaDependencies.dagger
    apt     petuniaDependencies.daggerCompiler
    compile petuniaDependencies.jsr250

    debugCompile petuniaDependencies.leakcanary
    releaseCompile petuniaDependencies.leakcanaryNoOp

    compile(petuniaDependencies.crashlytics) {
        transitive = true;
    }

    compile petuniaDependencies.okhttp
    compile petuniaDependencies.gson
    compile petuniaDependencies.okhttpLoggingInterceptor


    compile project(':di')

    testCompile 'junit:junit:4.12'
}
